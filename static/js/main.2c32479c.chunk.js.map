{"version":3,"sources":["assets/bgImage.png","assets/add-icon.svg","components/BackgroundContainer.js","components/modal/ModalHeader.js","components/modal/ModalFooter.js","components/modal/ModalInput.js","components/modal/ModalForm.js","components/modal/ToggleContent.js","components/tasks/AddTaskBtn.js","components/tasks/ErrorListFull.js","components/common/Spinner.js","components/tasks/ContentContainer.js","components/tasks/MainContainer.js","components/common/Header.js","components/common/Footer.js","App.js","index.js"],"names":["module","exports","BackgroundContainer","React","memo","className","src","bgImage","ModalHeader","ModalFooter","closeModal","type","onClick","ModalInput","handleChange","newTaskValue","errors","value","placeholder","onChange","event","textRequired","validText","ModalForm","addTask","useState","setNewTaskValue","setErrors","fieldIsValid","useCallback","match","Object","keys","length","handleSubmit","preventDefault","onSubmit","target","ToggleContent","toggle","content","isShown","setIsShown","Modal","children","ReactDOM","createPortal","document","getElementById","AddTaskBtn","show","addIcon","alt","ErrorListFull","Spinner","ListContainer","lazy","ContentContainer","taskName","isCompleted","tasks","setTasks","isListFull","setIsListFull","useMemo","taskList","completeTask","index","deleteTask","splice","useEffect","hide","fallback","MainContainer","Header","Footer","App","render"],"mappings":"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","file":"static/js/main.2c32479c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgImage.b1adbb3e.png\";","module.exports = __webpack_public_path__ + \"static/media/add-icon.84ece57d.svg\";","import React from \"react\";\r\nimport bgImage  from '../assets/bgImage.png';\r\n\r\n\r\nexport const BackgroundContainer =React.memo(({}) => {\r\n    return (\r\n        <div className=\"bg-container\">\r\n            <img src={bgImage}/>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\n\r\nexport const ModalHeader = React.memo(() => {\r\n    return (\r\n        <>\r\n            <h3>\r\n                    Add tasks\r\n            </h3>\r\n            <p>\r\n                     fill in the input with your task.\r\n            </p>\r\n        </>\r\n    )\r\n})","import React from \"react\";\r\n\r\nexport const ModalFooter = ({closeModal}) => {\r\n    return (\r\n        <div className='modal-footer'>\r\n            <button className=\"add-btn\" type=\"submit\">Add task</button>\r\n            <button className=\"close-btn\" onClick={closeModal}>Close</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const ModalInput = ({handleChange,newTaskValue,errors }) => {\r\n    return (\r\n        <div className=\"input-container\">\r\n            <input value={newTaskValue} placeholder=\"New Task\" type=\"text\" className=\"input\" onChange={event => handleChange(event) } />\r\n            {!errors?null:(\r\n            <h4 className=\"error\">\r\n                {errors.textRequired||errors.validText}\r\n            </h4>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useState } from 'react';\r\n\r\nimport  {ModalHeader} from './ModalHeader'\r\nimport { ModalFooter } from './ModalFooter';\r\nimport { ModalInput } from './ModalInput';\r\n\r\nconst ModalForm = ({ addTask, closeModal}) => {\r\n    const [newTaskValue, setNewTaskValue] = useState('')\r\n    const [errors, setErrors] = useState({});\r\n\r\n    \r\n    const fieldIsValid = useCallback( () => {\r\n        const errors = {};\r\n        const textPattern = /^[a-zA-Z0-9 .!?\"-]+$/\r\n        if (!newTaskValue) errors.textRequired = \"* Text is required, please insert text\";\r\n        if (!newTaskValue.match(textPattern)) errors.validText = \"* Please insert text in English or numbers\";\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0\r\n    },[newTaskValue]);\r\n\r\n    const handleChange = event => {\r\n        let {value} = event.target\r\n        setNewTaskValue(value);\r\n    }\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!fieldIsValid()) return;\r\n        addTask(newTaskValue);\r\n        setNewTaskValue('');\r\n        closeModal();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <ModalHeader/>\r\n            <ModalInput  handleChange={handleChange} handleSubmit={handleSubmit} errors={errors} />\r\n            <ModalFooter closeModal={closeModal}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ModalForm;","\r\nimport React,{useState} from 'react'\r\nimport  ReactDOM from 'react-dom';\r\n\r\nconst ToggleContent = React.memo(({ toggle, content }) => {\r\n    const [isShown, setIsShown] = useState(false);\r\n    const hide = () => setIsShown(false);\r\n    const show = () => setIsShown(true);\r\n    return (\r\n      <>\r\n        {toggle(show)}\r\n        {isShown && content(hide)}\r\n      </>\r\n    );\r\n  })\r\n  \r\n  export const Modal = ({ children }) => (\r\n    ReactDOM.createPortal(\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n      ,\r\n      document.getElementById('modal-root')\r\n    )\r\n  );\r\n\r\n\r\n\r\nexport default ToggleContent;\r\n","import React from \"react\";\r\nimport addIcon from '../../assets/add-icon.svg'\r\n\r\n\r\nexport const AddTaskBtn =React.memo(({show}) => {\r\n    return (\r\n        <button className=\"btn-add-modal\" onClick={show} >\r\n            <h3> add  task</h3> \r\n            <img src={addIcon} alt=\"Add Icon\"/>\r\n        </button>\r\n    )\r\n})","import React from \"react\";\r\n\r\nexport const ErrorListFull = () => {\r\n    return (\r\n            <span className=\"list-error\">* the list can hold up to ten tasks, you have to delete some of your tasks. </span>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nexport const Spinner = () => {\r\n  return <div className=\"loader\"> Loading... </div>;\r\n};\r\n\r\n","import React,{useState,useEffect,useMemo, Suspense, lazy}  from \"react\";\r\nimport ModalForm from \"../modal/ModalForm\";\r\nimport ToggleContent,{Modal} from '../modal/ToggleContent';\r\nimport { AddTaskBtn } from \"./AddTaskBtn\";\r\nimport { ErrorListFull } from \"./ErrorListFull\";\r\n\r\nimport {Spinner} from '../common/Spinner';\r\n\r\n\r\nconst ListContainer = lazy(()=> import (\"./ListContainer\"));\r\n\r\n\r\n\r\n\r\nexport const ContentContainer = ({}) => {\r\n    const [tasks, setTasks] = useState([\r\n\r\n        {\r\n          taskName: 'Fix Wifi.',\r\n          isCompleted: true\r\n        },\r\n        {\r\n          taskName: 'buy groceries',\r\n          isCompleted: false\r\n        },\r\n        {\r\n          taskName: 'Do the dishes',\r\n          isCompleted: false\r\n        },\r\n        {\r\n          taskName: 'Wipe the floor',\r\n          isCompleted: false\r\n        }, {\r\n          taskName: 'Sell the car.',\r\n          isCompleted: true\r\n        }\r\n      ]);\r\n    const [isListFull, setIsListFull]  = useState(false);\r\n\r\n    const addTask = useMemo(()=>taskName => {\r\n      let taskList = [...tasks, { taskName }];\r\n      setTasks(taskList);\r\n    });\r\n    const completeTask = useMemo(()=> index => {\r\n      let taskList = [...tasks];\r\n      taskList[index].isCompleted = !taskList[index].isCompleted;\r\n      setTasks(taskList);\r\n    });\r\n    const deleteTask = useMemo(()=>index => {\r\n      let taskList = [...tasks];\r\n      taskList.splice(index, 1);\r\n      setTasks(taskList)\r\n    });\r\n\r\n    \r\n    useEffect(()=>{\r\n      (tasks.length>=10)?setIsListFull(true):setIsListFull(false);\r\n    },[tasks]);\r\n\r\n    return (\r\n        <>    \r\n            <ToggleContent\r\n              toggle={show =>  \r\n                isListFull?\r\n                (<ErrorListFull/>)\r\n                :\r\n                (\r\n                  <AddTaskBtn show={show}/> )}\r\n                     content={hide => (\r\n                      <Modal>\r\n                        <ModalForm addTask={addTask}  closeModal={hide}/>\r\n                      </Modal>\r\n                )}\r\n            />\r\n            <Suspense  \r\n                fallback={<Spinner />}>\r\n                <ListContainer tasks={tasks} deleteTask={deleteTask} completeTask={completeTask}/>\r\n              </Suspense>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React  from 'react';\r\nimport {BackgroundContainer} from '../BackgroundContainer';\r\nimport {ContentContainer} from './ContentContainer';\r\n\r\n\r\nexport const MainContainer = ({ }) => {\r\n\r\n    return (\r\n        <div className='main-container'>\r\n            <BackgroundContainer/>\r\n            <ContentContainer/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const Header = React.memo(() => {\r\n    return  (\r\n          <h1 className=\"header\">To do List</h1>\r\n    ) \r\n})\r\n\r\n","import React from \"react\";\r\n\r\nexport const Footer = React.memo(() => {\r\n    return (\r\n        \r\n        <div className=\"footer\">\r\n            <h3>Created by AAC-dev </h3>\r\n        </div>\r\n    )\r\n})","import React from 'react';\nimport {MainContainer} from './components/tasks/MainContainer';\nimport { Header } from './components/common/Header';\nimport { Footer } from './components/common/Footer';\nimport './App.css';\n\n\n\n\nconst App = () => {\n\n\n  return (\n    <div className=\"todoList-app-container\">\n        <Header/>\n        <MainContainer/>\n        <Footer/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}