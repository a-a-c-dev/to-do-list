{"version":3,"sources":["assets/add-icon.svg","assets/complete-icon.svg","assets/delete-icon.svg","components/tasks/NewTask.js","components/tasks/Task.js","components/modal/ToggleContent.js","components/tasks/TasksContainer.js","components/common/Header.js","App.js","index.js"],"names":["module","exports","NewTask","addTask","closeModal","useState","newTaskValue","setNewTaskValue","onSubmit","event","preventDefault","value","placeholder","type","className","onChange","e","target","src","addIcon","alt","Task","task","index","completeTask","deleteTask","style","textDecoration","isCompleted","taskName","onClick","completeIcon","deleteIcon","Modal","children","ReactDOM","createPortal","document","getElementById","ToggleContent","toggle","content","isShown","setIsShown","TasksContainer","tasks","setTasks","taskList","splice","map","key","show","hide","Header","App","render"],"mappings":"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","file":"static/js/main.4ef6ed5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add-icon.1d0950cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete-icon.333c5a07.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.a6029d89.svg\";","import React, { useState } from 'react';\r\nimport addIcon from '../../assets/add-icon.svg';\r\n\r\n\r\nconst NewTask = ({ addTask, closeModal}) => {\r\n    const [newTaskValue, setNewTaskValue] = useState('')\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!newTaskValue) return;\r\n        addTask(newTaskValue);\r\n        setNewTaskValue('');\r\n        closeModal();\r\n    }\r\n    return (\r\n        <>\r\n             <h3>\r\n                Add tasks\r\n            </h3>\r\n            <p>\r\n                 fill in the input with your task.\r\n            </p>\r\n            <form onSubmit={handleSubmit} >\r\n                <input value={newTaskValue} placeholder=\"New Task\" type=\"text\" className=\"input\" onChange={e => setNewTaskValue(e.target.value)} />\r\n                <button className=\"btn\" type=\"submit\"><img src={addIcon} alt=\"Add Icon\"/></button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewTask;","import React from 'react';\r\nimport completeIcon from '../../assets/complete-icon.svg';\r\nimport deleteIcon from '../../assets/delete-icon.svg';\r\n\r\n\r\n\r\nconst Task = ({ task, index, completeTask, deleteTask }) => {\r\n    return (\r\n        <div className=\"task-container\">\r\n            <div className=\"text-container\">\r\n                <p className=\"counter-task\">\r\n                    {index+1}.\r\n                </p>\r\n                <p className=\"task-text\" style={{ textDecoration: task.isCompleted ? 'line-through' : '' }}>\r\n                    {task.taskName}\r\n                </p>\r\n            </div>\r\n            <div className=\"btn-container\">\r\n                <button className=\"btn\" onClick={() => completeTask(index)}><img src={completeIcon} alt=\"Complete Icon\"/></button>\r\n                <button className=\"btn\" onClick={() => deleteTask(index)}><img src={deleteIcon} alt=\"Delete Icon\"/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;\r\n\r\n\r\n\r\n\r\n/*\r\n              <div className=\"range-container\">\r\n                  <input type=\"range\" id=\"volume\" name=\"volume\"\r\n                    defaultValue='1' min=\"0\" max=\"11\"/>\r\n                    <label htmlfor=\"volume\">importancy</label>\r\n                </div>\r\n*/","\r\nimport React,{useState} from 'react'\r\nimport  ReactDOM from 'react-dom';\r\n\r\nconst ToggleContent = ({ toggle, content }) => {\r\n    const [isShown, setIsShown] = useState(false);\r\n    const hide = () => setIsShown(false);\r\n    const show = () => setIsShown(true);\r\n    return (\r\n      <>\r\n        {toggle(show)}\r\n        {isShown && content(hide)}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export const Modal = ({ children }) => (\r\n    ReactDOM.createPortal(\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n      ,\r\n      document.getElementById('modal-root')\r\n    )\r\n  );\r\n\r\n\r\n\r\nexport default ToggleContent;\r\n","import React,{useState} from \"react\";\r\nimport NewTask from \"./NewTask\";\r\nimport Task from \"./Task\";\r\nimport ToggleContent,{Modal} from '../modal/ToggleContent';\r\nimport addIcon from '../../assets/add-icon.svg'\r\n//import addIcon from '../../img/add-icon.svg';\r\n\r\nconst TasksContainer = () => {\r\n\r\n\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n          taskName: 'Sell your car.',\r\n          isCompleted: true\r\n        },\r\n        {\r\n          taskName: 'Fix upper floor Wifi.',\r\n          isCompleted: true\r\n        },\r\n        {\r\n          taskName: 'Complete portfolio',\r\n          isCompleted: false\r\n        },\r\n        {\r\n          taskName: 'Do the dishes',\r\n          isCompleted: false\r\n        },\r\n        {\r\n          taskName: 'Wipe the floor',\r\n          isCompleted: false\r\n        }\r\n      ])\r\n    \r\n      const addTask = taskName => {\r\n        let taskList = [...tasks, { taskName }];\r\n        setTasks(taskList);\r\n        }\r\n    \r\n      const completeTask = index => {\r\n        let taskList = [...tasks];\r\n        taskList[index].isCompleted = !taskList[index].isCompleted;\r\n        setTasks(taskList);\r\n      }\r\n      const deleteTask = index => {\r\n        let taskList = [...tasks];\r\n        taskList.splice(index, 1);\r\n        setTasks(taskList)\r\n      }\r\n\r\n    return (\r\n        <div className=\"main-container\">    \r\n          \r\n            <div className=\"tasks-container\">\r\n                {tasks.map((task, index) => (\r\n                    <Task\r\n                    key={index}\r\n                    index={index}\r\n                    task={task}\r\n                    completeTask={completeTask}\r\n                    deleteTask={deleteTask}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <ToggleContent\r\n                toggle={show => \r\n                            <button className=\"btn-add-modal\" onClick={show} >\r\n                                <h3>Press here to add new task</h3> \r\n                                <img src={addIcon} alt=\"Add Icon\"/>\r\n                            </button>\r\n                        }\r\n                content={hide => (\r\n                    <Modal>\r\n                        <NewTask addTask={addTask}  closeModal={hide}/>\r\n                        <button className=\"close-btn\" onClick={hide}>Close</button>\r\n                    </Modal>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TasksContainer;","import React from 'react';\r\n\r\n\r\nexport const Header = () => {\r\n    return  (\r\n          <h1 className=\"header\"> Welcome to A-A-C <br/>To-do List App</h1>\r\n    ) \r\n}\r\n\r\n","import React from 'react';\nimport TasksContainer from './components/tasks/TasksContainer';\nimport { Header } from './components/common/Header';\nimport './App.css';\n\n\n\n\nconst App = () => {\n\n\n  return (\n    <div className=\"todoList-app\">\n        <Header/>\n        <TasksContainer/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}