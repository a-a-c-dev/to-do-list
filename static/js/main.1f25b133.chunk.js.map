{"version":3,"sources":["assets/add-icon.svg","assets/complete-icon.svg","assets/delete-icon.svg","components/tasks/NewTask.js","components/tasks/Task.js","components/modal/ToggleContent.js","components/tasks/TasksContainer.js","components/common/Header.js","App.js","index.js"],"names":["module","exports","NewTask","addTask","closeModal","useState","newTaskValue","setNewTaskValue","errors","setErrors","onSubmit","event","preventDefault","text","textRequired","match","validText","Object","keys","length","fieldIsValid","value","placeholder","type","className","onChange","target","src","addIcon","alt","Task","task","index","completeTask","deleteTask","style","textDecoration","isCompleted","taskName","onClick","completeIcon","deleteIcon","Modal","children","ReactDOM","createPortal","document","getElementById","ToggleContent","toggle","content","isShown","setIsShown","TasksContainer","tasks","setTasks","listIsFull","setListIsFull","taskList","splice","useEffect","map","key","show","hide","Header","App","render"],"mappings":"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","file":"static/js/main.1f25b133.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add-icon.1d0950cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete-icon.333c5a07.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.a6029d89.svg\";","import React, { useState } from 'react';\r\nimport addIcon from '../../assets/add-icon.svg';\r\n\r\n\r\nconst NewTask = ({ addTask, closeModal}) => {\r\n    const [newTaskValue, setNewTaskValue] = useState('')\r\n    const [errors, setErrors] = useState({});\r\n\r\n    \r\n    const fieldIsValid = text => {\r\n        const errors = {};\r\n        const textPattern = /^[a-zA-Z0-9_.-]*$/\r\n        if (!text) errors.textRequired = \"* Text is required, please insert text\";\r\n        if (!text.match(textPattern)) errors.validText = \"* Please insert text in English or numbers\";\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!fieldIsValid(newTaskValue)) return;\r\n        addTask(newTaskValue);\r\n        setNewTaskValue('');\r\n        closeModal();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n             <h3>\r\n                Add tasks\r\n            </h3>\r\n            <p>\r\n                 fill in the input with your task.\r\n            </p>\r\n            <form onSubmit={handleSubmit} >\r\n                <input value={newTaskValue} placeholder=\"New Task\" type=\"text\" className=\"input\" onChange={event => setNewTaskValue(event.target.value) } />\r\n                <button className=\"btn\" type=\"submit\"><img src={addIcon} alt=\"Add Icon\"/></button>\r\n            </form>\r\n            {!errors?null:(\r\n                <h4 className=\"error\">\r\n                    {errors.textRequired||errors.validText}\r\n                </h4>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewTask;","import React from 'react';\r\nimport completeIcon from '../../assets/complete-icon.svg';\r\nimport deleteIcon from '../../assets/delete-icon.svg';\r\n\r\n\r\n\r\nconst Task = ({ task, index, completeTask, deleteTask }) => {\r\n    return (\r\n        <div className=\"task-container\">\r\n            <div className=\"text-container\">\r\n                <p className=\"counter-task\">\r\n                    {index+1}.\r\n                </p>\r\n                <p className=\"task-text\" style={{ textDecoration: task.isCompleted ? 'line-through' : '' }}>\r\n                    {task.taskName}\r\n                </p>\r\n            </div>\r\n            <div className=\"btn-container\">\r\n                <button className=\"btn\" onClick={() => completeTask(index)}><img src={completeIcon} alt=\"Complete Icon\"/></button>\r\n                <button className=\"btn\" onClick={() => deleteTask(index)}><img src={deleteIcon} alt=\"Delete Icon\"/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","\r\nimport React,{useState} from 'react'\r\nimport  ReactDOM from 'react-dom';\r\n\r\nconst ToggleContent = ({ toggle, content }) => {\r\n    const [isShown, setIsShown] = useState(false);\r\n    const hide = () => setIsShown(false);\r\n    const show = () => setIsShown(true);\r\n    return (\r\n      <>\r\n        {toggle(show)}\r\n        {isShown && content(hide)}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export const Modal = ({ children }) => (\r\n    ReactDOM.createPortal(\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n      ,\r\n      document.getElementById('modal-root')\r\n    )\r\n  );\r\n\r\n\r\n\r\nexport default ToggleContent;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport NewTask from \"./NewTask\";\r\nimport Task from \"./Task\";\r\nimport ToggleContent,{Modal} from '../modal/ToggleContent';\r\nimport addIcon from '../../assets/add-icon.svg'\r\n\r\nconst TasksContainer = () => {\r\n\r\n\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n          taskName: 'Sell your car.',\r\n          isCompleted: true\r\n        },\r\n        {\r\n          taskName: 'Fix upper floor Wifi.',\r\n          isCompleted: true\r\n        },\r\n        {\r\n          taskName: 'buy groceries',\r\n          isCompleted: false\r\n        },\r\n        {\r\n          taskName: 'Do the dishes',\r\n          isCompleted: false\r\n        },\r\n        {\r\n          taskName: 'Wipe the floor',\r\n          isCompleted: false\r\n        }\r\n      ])\r\n      const [listIsFull, setListIsFull]  = useState(false)\r\n    \r\n      const addTask = taskName => {\r\n        let taskList = [...tasks, { taskName }];\r\n        setTasks(taskList);\r\n        }\r\n    \r\n      const completeTask = index => {\r\n        let taskList = [...tasks];\r\n        taskList[index].isCompleted = !taskList[index].isCompleted;\r\n        setTasks(taskList);\r\n      }\r\n      const deleteTask = index => {\r\n        let taskList = [...tasks];\r\n        taskList.splice(index, 1);\r\n        setTasks(taskList)\r\n      }\r\n      useEffect(()=>{\r\n        (tasks.length===10) ?setListIsFull(true):setListIsFull(false)\r\n      },[tasks])\r\n    return (\r\n        <div className=\"main-container\">    \r\n          \r\n            <div className=\"tasks-container\">\r\n                {tasks.map((task, index) =>  \r\n                      (\r\n                        <Task\r\n                        key={index}\r\n                        index={index}\r\n                        task={task}\r\n                        completeTask={completeTask}\r\n                        deleteTask={deleteTask}\r\n                        />\r\n                      )\r\n                )}\r\n            </div>\r\n            <ToggleContent\r\n                toggle={show => \r\n                            listIsFull?\r\n                            (\r\n                              <p className=\"error\">\r\n                                * the list of tasks is full!<br/>\r\n                                the list of tasks can hold up to ten tasks,<br/>\r\n                                to add  more tasks\r\n                                please delete some of the tasks that have been completed \r\n                              </p>\r\n                            )\r\n                            :\r\n                            (\r\n                              <button className=\"btn-add-modal\" onClick={show} >\r\n                                <h3>Press here to add new task</h3> \r\n                                <img src={addIcon} alt=\"Add Icon\"/>\r\n                              </button>\r\n                            )\r\n                        }\r\n                content={hide => (\r\n                    <Modal>\r\n                        <NewTask addTask={addTask}  closeModal={hide}/>\r\n                        <button className=\"close-btn\" onClick={hide}>Close</button>\r\n                    </Modal>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TasksContainer;","import React from 'react';\r\n\r\n\r\nexport const Header = () => {\r\n    return  (\r\n          <h1 className=\"header\"> Welcome to A-A-C <br/>To-do List App</h1>\r\n    ) \r\n}\r\n\r\n","import React from 'react';\nimport TasksContainer from './components/tasks/TasksContainer';\nimport { Header } from './components/common/Header';\nimport './App.css';\n\n\n\n\nconst App = () => {\n\n\n  return (\n    <div className=\"todoList-app\">\n        <Header/>\n        <TasksContainer/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}